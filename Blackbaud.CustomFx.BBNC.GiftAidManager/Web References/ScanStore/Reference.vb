'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace ScanStore
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ScanStoreSoap", [Namespace]:="http://tempuri.org/ScanStoreOnline/ScanStore")>  _
    Partial Public Class ScanStore
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private PingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AbandonOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AuthenticatedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AuthenticateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AuthenticateSiteIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AuthenticateSerialNoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetImageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetClientStatsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetReportInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Blackbaud.CustomFx.BBNC.GiftAidManager.My.MySettings.Default.Blackbaud_CustomFx_BBNC_GiftAidManager_com_scanstore_ScanStore
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event PingCompleted As PingCompletedEventHandler
        
        '''<remarks/>
        Public Event AbandonCompleted As AbandonCompletedEventHandler
        
        '''<remarks/>
        Public Event AuthenticatedCompleted As AuthenticatedCompletedEventHandler
        
        '''<remarks/>
        Public Event AuthenticateCompleted As AuthenticateCompletedEventHandler
        
        '''<remarks/>
        Public Event AuthenticateSiteIDCompleted As AuthenticateSiteIDCompletedEventHandler
        
        '''<remarks/>
        Public Event AuthenticateSerialNoCompleted As AuthenticateSerialNoCompletedEventHandler
        
        '''<remarks/>
        Public Event SearchCompleted As SearchCompletedEventHandler
        
        '''<remarks/>
        Public Event GetImageCompleted As GetImageCompletedEventHandler
        
        '''<remarks/>
        Public Event GetClientStatsCompleted As GetClientStatsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetReportInfoCompleted As GetReportInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFileCompleted As GetFileCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ScanStoreOnline/ScanStore/Ping", RequestNamespace:="http://tempuri.org/ScanStoreOnline/ScanStore", ResponseNamespace:="http://tempuri.org/ScanStoreOnline/ScanStore", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Ping() As Boolean
            Dim results() As Object = Me.Invoke("Ping", New Object(-1) {})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PingAsync()
            Me.PingAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PingAsync(ByVal userState As Object)
            If (Me.PingOperationCompleted Is Nothing) Then
                Me.PingOperationCompleted = AddressOf Me.OnPingOperationCompleted
            End If
            Me.InvokeAsync("Ping", New Object(-1) {}, Me.PingOperationCompleted, userState)
        End Sub
        
        Private Sub OnPingOperationCompleted(ByVal arg As Object)
            If (Not (Me.PingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PingCompleted(Me, New PingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ScanStoreOnline/ScanStore/Abandon", RequestNamespace:="http://tempuri.org/ScanStoreOnline/ScanStore", ResponseNamespace:="http://tempuri.org/ScanStoreOnline/ScanStore", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Abandon()
            Me.Invoke("Abandon", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AbandonAsync()
            Me.AbandonAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AbandonAsync(ByVal userState As Object)
            If (Me.AbandonOperationCompleted Is Nothing) Then
                Me.AbandonOperationCompleted = AddressOf Me.OnAbandonOperationCompleted
            End If
            Me.InvokeAsync("Abandon", New Object(-1) {}, Me.AbandonOperationCompleted, userState)
        End Sub
        
        Private Sub OnAbandonOperationCompleted(ByVal arg As Object)
            If (Not (Me.AbandonCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AbandonCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ScanStoreOnline/ScanStore/Authenticated", RequestNamespace:="http://tempuri.org/ScanStoreOnline/ScanStore", ResponseNamespace:="http://tempuri.org/ScanStoreOnline/ScanStore", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Authenticated() As Boolean
            Dim results() As Object = Me.Invoke("Authenticated", New Object(-1) {})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AuthenticatedAsync()
            Me.AuthenticatedAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AuthenticatedAsync(ByVal userState As Object)
            If (Me.AuthenticatedOperationCompleted Is Nothing) Then
                Me.AuthenticatedOperationCompleted = AddressOf Me.OnAuthenticatedOperationCompleted
            End If
            Me.InvokeAsync("Authenticated", New Object(-1) {}, Me.AuthenticatedOperationCompleted, userState)
        End Sub
        
        Private Sub OnAuthenticatedOperationCompleted(ByVal arg As Object)
            If (Not (Me.AuthenticatedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AuthenticatedCompleted(Me, New AuthenticatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ScanStoreOnline/ScanStore/Authenticate", RequestNamespace:="http://tempuri.org/ScanStoreOnline/ScanStore", ResponseNamespace:="http://tempuri.org/ScanStoreOnline/ScanStore", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Authenticate(ByVal sAccountName As String, ByVal sPassword As String, ByVal nApplication As SourceApplication) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Authenticate", New Object() {sAccountName, sPassword, nApplication})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AuthenticateAsync(ByVal sAccountName As String, ByVal sPassword As String, ByVal nApplication As SourceApplication)
            Me.AuthenticateAsync(sAccountName, sPassword, nApplication, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AuthenticateAsync(ByVal sAccountName As String, ByVal sPassword As String, ByVal nApplication As SourceApplication, ByVal userState As Object)
            If (Me.AuthenticateOperationCompleted Is Nothing) Then
                Me.AuthenticateOperationCompleted = AddressOf Me.OnAuthenticateOperationCompleted
            End If
            Me.InvokeAsync("Authenticate", New Object() {sAccountName, sPassword, nApplication}, Me.AuthenticateOperationCompleted, userState)
        End Sub
        
        Private Sub OnAuthenticateOperationCompleted(ByVal arg As Object)
            If (Not (Me.AuthenticateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AuthenticateCompleted(Me, New AuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ScanStoreOnline/ScanStore/AuthenticateSiteID", RequestNamespace:="http://tempuri.org/ScanStoreOnline/ScanStore", ResponseNamespace:="http://tempuri.org/ScanStoreOnline/ScanStore", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AuthenticateSiteID(ByVal sAccountName As String, ByVal sPassword As String, ByVal nApplication As SourceApplication, ByVal iSiteID As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("AuthenticateSiteID", New Object() {sAccountName, sPassword, nApplication, iSiteID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AuthenticateSiteIDAsync(ByVal sAccountName As String, ByVal sPassword As String, ByVal nApplication As SourceApplication, ByVal iSiteID As Integer)
            Me.AuthenticateSiteIDAsync(sAccountName, sPassword, nApplication, iSiteID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AuthenticateSiteIDAsync(ByVal sAccountName As String, ByVal sPassword As String, ByVal nApplication As SourceApplication, ByVal iSiteID As Integer, ByVal userState As Object)
            If (Me.AuthenticateSiteIDOperationCompleted Is Nothing) Then
                Me.AuthenticateSiteIDOperationCompleted = AddressOf Me.OnAuthenticateSiteIDOperationCompleted
            End If
            Me.InvokeAsync("AuthenticateSiteID", New Object() {sAccountName, sPassword, nApplication, iSiteID}, Me.AuthenticateSiteIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnAuthenticateSiteIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.AuthenticateSiteIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AuthenticateSiteIDCompleted(Me, New AuthenticateSiteIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ScanStoreOnline/ScanStore/AuthenticateSerialNo", RequestNamespace:="http://tempuri.org/ScanStoreOnline/ScanStore", ResponseNamespace:="http://tempuri.org/ScanStoreOnline/ScanStore", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AuthenticateSerialNo(ByVal sAccountName As String, ByVal sPassword As String, ByVal nApplication As SourceApplication, ByVal sClientUserName As String, ByVal sSerialNo As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("AuthenticateSerialNo", New Object() {sAccountName, sPassword, nApplication, sClientUserName, sSerialNo})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AuthenticateSerialNoAsync(ByVal sAccountName As String, ByVal sPassword As String, ByVal nApplication As SourceApplication, ByVal sClientUserName As String, ByVal sSerialNo As String)
            Me.AuthenticateSerialNoAsync(sAccountName, sPassword, nApplication, sClientUserName, sSerialNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AuthenticateSerialNoAsync(ByVal sAccountName As String, ByVal sPassword As String, ByVal nApplication As SourceApplication, ByVal sClientUserName As String, ByVal sSerialNo As String, ByVal userState As Object)
            If (Me.AuthenticateSerialNoOperationCompleted Is Nothing) Then
                Me.AuthenticateSerialNoOperationCompleted = AddressOf Me.OnAuthenticateSerialNoOperationCompleted
            End If
            Me.InvokeAsync("AuthenticateSerialNo", New Object() {sAccountName, sPassword, nApplication, sClientUserName, sSerialNo}, Me.AuthenticateSerialNoOperationCompleted, userState)
        End Sub
        
        Private Sub OnAuthenticateSerialNoOperationCompleted(ByVal arg As Object)
            If (Not (Me.AuthenticateSerialNoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AuthenticateSerialNoCompleted(Me, New AuthenticateSerialNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ScanStoreOnline/ScanStore/Search", RequestNamespace:="http://tempuri.org/ScanStoreOnline/ScanStore", ResponseNamespace:="http://tempuri.org/ScanStoreOnline/ScanStore", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Search(ByVal oInDS As System.Data.DataSet) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Search", New Object() {oInDS})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SearchAsync(ByVal oInDS As System.Data.DataSet)
            Me.SearchAsync(oInDS, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SearchAsync(ByVal oInDS As System.Data.DataSet, ByVal userState As Object)
            If (Me.SearchOperationCompleted Is Nothing) Then
                Me.SearchOperationCompleted = AddressOf Me.OnSearchOperationCompleted
            End If
            Me.InvokeAsync("Search", New Object() {oInDS}, Me.SearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.SearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SearchCompleted(Me, New SearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ScanStoreOnline/ScanStore/GetImage", RequestNamespace:="http://tempuri.org/ScanStoreOnline/ScanStore", ResponseNamespace:="http://tempuri.org/ScanStoreOnline/ScanStore", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetImage(ByVal iImageId As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetImage", New Object() {iImageId})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetImageAsync(ByVal iImageId As Integer)
            Me.GetImageAsync(iImageId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetImageAsync(ByVal iImageId As Integer, ByVal userState As Object)
            If (Me.GetImageOperationCompleted Is Nothing) Then
                Me.GetImageOperationCompleted = AddressOf Me.OnGetImageOperationCompleted
            End If
            Me.InvokeAsync("GetImage", New Object() {iImageId}, Me.GetImageOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetImageOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetImageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetImageCompleted(Me, New GetImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ScanStoreOnline/ScanStore/GetClientStats", RequestNamespace:="http://tempuri.org/ScanStoreOnline/ScanStore", ResponseNamespace:="http://tempuri.org/ScanStoreOnline/ScanStore", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetClientStats() As Integer()
            Dim results() As Object = Me.Invoke("GetClientStats", New Object(-1) {})
            Return CType(results(0),Integer())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetClientStatsAsync()
            Me.GetClientStatsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetClientStatsAsync(ByVal userState As Object)
            If (Me.GetClientStatsOperationCompleted Is Nothing) Then
                Me.GetClientStatsOperationCompleted = AddressOf Me.OnGetClientStatsOperationCompleted
            End If
            Me.InvokeAsync("GetClientStats", New Object(-1) {}, Me.GetClientStatsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetClientStatsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetClientStatsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetClientStatsCompleted(Me, New GetClientStatsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ScanStoreOnline/ScanStore/GetReportInfo", RequestNamespace:="http://tempuri.org/ScanStoreOnline/ScanStore", ResponseNamespace:="http://tempuri.org/ScanStoreOnline/ScanStore", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetReportInfo() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetReportInfo", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetReportInfoAsync()
            Me.GetReportInfoAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetReportInfoAsync(ByVal userState As Object)
            If (Me.GetReportInfoOperationCompleted Is Nothing) Then
                Me.GetReportInfoOperationCompleted = AddressOf Me.OnGetReportInfoOperationCompleted
            End If
            Me.InvokeAsync("GetReportInfo", New Object(-1) {}, Me.GetReportInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetReportInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetReportInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetReportInfoCompleted(Me, New GetReportInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ScanStoreOnline/ScanStore/GetFile", RequestNamespace:="http://tempuri.org/ScanStoreOnline/ScanStore", ResponseNamespace:="http://tempuri.org/ScanStoreOnline/ScanStore", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFile(ByVal iRpt As StatReportList, ByVal sFileName As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetFile", New Object() {iRpt, sFileName})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFileAsync(ByVal iRpt As StatReportList, ByVal sFileName As String)
            Me.GetFileAsync(iRpt, sFileName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFileAsync(ByVal iRpt As StatReportList, ByVal sFileName As String, ByVal userState As Object)
            If (Me.GetFileOperationCompleted Is Nothing) Then
                Me.GetFileOperationCompleted = AddressOf Me.OnGetFileOperationCompleted
            End If
            Me.InvokeAsync("GetFile", New Object() {iRpt, sFileName}, Me.GetFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFileCompleted(Me, New GetFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/ScanStoreOnline/ScanStore")>  _
    Public Enum SourceApplication
        
        '''<remarks/>
        ScanStoreOnline
        
        '''<remarks/>
        RaisersEdge
    End Enum
    
    '''<remarks/>
    <System.FlagsAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/ScanStoreOnline/ScanStore")>  _
    Public Enum StatReportList
        
        '''<remarks/>
        GAStatusList = 1
        
        '''<remarks/>
        AtRiskList = 2
        
        '''<remarks/>
        AddlGA = 4
        
        '''<remarks/>
        ConflictDecs = 8
        
        '''<remarks/>
        ConflictDecDates = 16
        
        '''<remarks/>
        AllDocsList = 32
        
        '''<remarks/>
        Misc = 64
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub PingCompletedEventHandler(ByVal sender As Object, ByVal e As PingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub AbandonCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub AuthenticatedCompletedEventHandler(ByVal sender As Object, ByVal e As AuthenticatedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AuthenticatedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub AuthenticateCompletedEventHandler(ByVal sender As Object, ByVal e As AuthenticateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AuthenticateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub AuthenticateSiteIDCompletedEventHandler(ByVal sender As Object, ByVal e As AuthenticateSiteIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AuthenticateSiteIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub AuthenticateSerialNoCompletedEventHandler(ByVal sender As Object, ByVal e As AuthenticateSerialNoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AuthenticateSerialNoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub SearchCompletedEventHandler(ByVal sender As Object, ByVal e As SearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub GetImageCompletedEventHandler(ByVal sender As Object, ByVal e As GetImageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetImageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub GetClientStatsCompletedEventHandler(ByVal sender As Object, ByVal e As GetClientStatsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetClientStatsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub GetReportInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetReportInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetReportInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub GetFileCompletedEventHandler(ByVal sender As Object, ByVal e As GetFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
